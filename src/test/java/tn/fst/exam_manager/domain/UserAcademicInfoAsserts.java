package tn.fst.exam_manager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserAcademicInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAcademicInfoAllPropertiesEquals(UserAcademicInfo expected, UserAcademicInfo actual) {
        assertUserAcademicInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertUserAcademicInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAcademicInfoAllUpdatablePropertiesEquals(UserAcademicInfo expected, UserAcademicInfo actual) {
        assertUserAcademicInfoUpdatableFieldsEquals(expected, actual);
        assertUserAcademicInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAcademicInfoAutoGeneratedPropertiesEquals(UserAcademicInfo expected, UserAcademicInfo actual) {
        assertThat(expected)
            .as("Verify UserAcademicInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAcademicInfoUpdatableFieldsEquals(UserAcademicInfo expected, UserAcademicInfo actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAcademicInfoUpdatableRelationshipsEquals(UserAcademicInfo expected, UserAcademicInfo actual) {
        assertThat(expected)
            .as("Verify UserAcademicInfo relationships")
            .satisfies(e -> assertThat(e.getDepartment()).as("check department").isEqualTo(actual.getDepartment()))
            .satisfies(e -> assertThat(e.getInstitute()).as("check institute").isEqualTo(actual.getInstitute()));
    }
}
