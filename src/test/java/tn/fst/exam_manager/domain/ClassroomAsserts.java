package tn.fst.exam_manager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClassroomAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassroomAllPropertiesEquals(Classroom expected, Classroom actual) {
        assertClassroomAutoGeneratedPropertiesEquals(expected, actual);
        assertClassroomAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassroomAllUpdatablePropertiesEquals(Classroom expected, Classroom actual) {
        assertClassroomUpdatableFieldsEquals(expected, actual);
        assertClassroomUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassroomAutoGeneratedPropertiesEquals(Classroom expected, Classroom actual) {
        assertThat(expected)
            .as("Verify Classroom auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassroomUpdatableFieldsEquals(Classroom expected, Classroom actual) {
        assertThat(expected)
            .as("Verify Classroom relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCapacity()).as("check capacity").isEqualTo(actual.getCapacity()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassroomUpdatableRelationshipsEquals(Classroom expected, Classroom actual) {
        assertThat(expected)
            .as("Verify Classroom relationships")
            .satisfies(e -> assertThat(e.getDepartment()).as("check department").isEqualTo(actual.getDepartment()));
    }
}
