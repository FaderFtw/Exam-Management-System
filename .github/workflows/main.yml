name: Maven Test, Build, Publish, SonarQube Analysis, and Docker

on:
  push:
    branches:
      - develop  # Trigger the workflow when changes are pushed to the develop branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:

  build:
    runs-on: ubuntu-latest
    
    environment: dev  # Specify the environment here

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github  # Matches the id in settings.xml
        settings-path: ${{ github.workspace }}  # Location of the settings.xml file

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run Tests
      run: mvn test --file pom.xml

    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Echo SONAR_HOST_URL
      run: echo "SONAR_HOST_URL is:" ${{ secrets.SONAR_HOST_URL }}

    - name: Run SonarCloud Analysis
      run: |
        mvn -X sonar:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} -Dsonar.host.url="https://sonarcloud.io" -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Docker Build and Push to GitHub Container Registry
    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ github.actor }}  # Use GitHub username
        password: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication

    - name: Build Docker Image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/exam-management-app:${{ github.sha }} .
      
    - name: Push Docker Image to GitHub Container Registry
      run: |
        docker push ghcr.io/${{ github.repository_owner }}/exam-management-app:${{ github.sha }}
